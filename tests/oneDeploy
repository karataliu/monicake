#!/usr/bin/env perl
use 5.010;
use warnings;
use strict;
use Getopt::Long;

my $optAgent;
my $optVmlist;

GetOptions ("agent=s"       => \$optAgent,
            "vmlist=s"      => \$optVmlist,
            "help"          => sub { say "hi"; },
          );

# handle relates between the two.
$optAgent = "auto" unless defined($optAgent);
$optVmlist = "" unless defined($optVmlist);

if (@ARGV < 1){
    say "$0 [--agent=<auto|list|no>] [--vmlist] <resource-group>";
    exit 1;
}

my $resourceGroup  = shift;

my $ret = 0;
$ret = system("azure group deployment create $resourceGroup -f ../azuredeployMonitoringServer.json -n configMonitoringVM |tee /tmp/onedep.log ");

if($ret){
    say "deploy monitor vm failed";
    exit 1;
}

open FL,"<","/tmp/onedep.log";
my @output = <FL>;
close FL;

my $endpoint;
my $serverIp;
my $monitorVm;
foreach (@output){
    $endpoint = $1 if (/serverPublicEndpoint\s*String\s*(\S+)/);
    $serverIp = $1 if (/serverInternalIp\s*String\s*(\S+)/);
    $monitorVm = $1 if (/monitorVmName\s*String\s*(\S+)/);
}

unless (defined($serverIp) && defined($endpoint) && defined($monitorVm)){
    say "server ip not found";
    exit 2;
}

say "Server interal IP: $serverIp";
say "Server public endpoint: $endpoint";

my @vms;
my $VMS="/tmp/${resourceGroup}_vms";

if ($optAgent eq "no"){
    exit 0;
} elsif ($optAgent eq "list"){
    @vms = split / /, $optVmlist;
} elsif ($optAgent eq "auto" || $optAgent eq "edit"){
    my $cmd = "azure vm list $resourceGroup|tail -n+5 |head -n-1 |awk '{print \$2}'";
    $cmd .= " |grep -v $monitorVm" if ($optAgent eq "auto");
    say "do auto discovery.";
    system("$cmd > $VMS");
    if ($optAgent eq "edit"){
        $ret = system("vim $VMS");
        if ($ret) {
            say "aborted";
            exit 2;
        }
    }
    open F, "<", $VMS;
    while(<F>){
        chomp;
        push @vms, $_;
    }
    close F;
}

my $vmstr = join("\",\"", @vms);
my $json = <<"EOM";
{"vmNames":{"value":[\"$vmstr\"]},"serverIp":{"value":"$serverIp"}}
EOM

system("azure group deployment create $resourceGroup -f ../azuredeployMonitoringAgent.json -p '$json' -n configMonitoringAgents");

say "Done. Please visitor poprtal on: $endpoint";
