{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "prefix str."
      },
      "defaultValue": ""
    },
    "adminPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Public ssh key."
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "VM instance count."
      },
      "defaultValue": 2
    }
  },
  "variables": {
    "prefix": "[concat(parameters('prefix'),uniqueString(resourceGroup().id))]",
    "apiSuffixes": [".core.windows.net", ".core.chinacloudapi.cn"],
    "location": "[tolower(resourceGroup().location)]",
    "locationTempSub": "[replace(variables('location'),'china','1234')]",
    "apiSuffix": "[variables('apiSuffixes')[sub(length(variables('location')),length(variables('locationTempSub')))]]",
    "blobApiSuffix": "[concat('.blob',variables('apiSuffix'))]",
    "osType":{
      "publisher":"Canonical",
      "offer":"UbuntuServer",
      "sku":"14.04.3-LTS",
      "version":"latest"
    },
    "imageReference":"[variables('osType')]",
    "OSDiskName": "[concat(variables('prefix'),'disk')]",
    "nicName": "[concat(variables('prefix'),'nic')]",
    "virtualNetworkName": "[concat(variables('prefix'),'vnet')]",
    "addressPrefix": "192.168.0.0/16",
    "subnetName": "default",
    "subnetPrefix": "192.168.0.0/24",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "publicIPAddressName": "[concat(variables('prefix'),'publicip')]",
    "publicIPAddressType": "Dynamic",
    "storageAccount": "[concat(variables('prefix'),'sto')]",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat(variables('prefix'),'vm')]",
    "vmSize": "Standard_DS2",
    "storageAccountType": "Standard_LRS",
    "VMCount": "[parameters('vmCount')]",
    "VMStart": 1,
    "adminUsername": "monicake"
  },
  "resources": [
   {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "copy": {
        "name": "vmCountCopy",
        "count": "[variables('VMCount')]"
      },
      "name": "[concat(variables('publicIPAddressName'),copyIndex(variables('VMStart')))]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('prefix'),'vm',copyIndex(variables('VMStart')))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "copy": {
        "name": "vmCountCopy",
        "count": "[variables('VMCount')]"
      },
      "name": "[concat(variables('nicName'),copyIndex(variables('VMStart')))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'),copyIndex(variables('VMStart')))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex(variables('VMStart'))))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "copy": {
        "name": "vmCountCopy",
        "count": "[variables('VMCount')]"
      },
      "name": "[concat(variables('vmName'),copyIndex(variables('VMStart')))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex(variables('VMStart')))]",
        "[variables('storageAccount')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyIndex(variables('VMStart')))]",
          "adminUsername": "[variables('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "osDisk": {
            "vhd": {
              "uri": "[concat('http://',variables('storageAccount'),variables('blobApiSuffix'),'/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),copyIndex(variables('VMStart')),'.vhd')]"
            },
            "name": "osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "imageReference":"[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex(variables('VMStart'))))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "prefix":{
      "type": "string",
      "value": "[variables('prefix')]"
    },
    "resourceGroup":{
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}

